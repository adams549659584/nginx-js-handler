import e from"fs";var t={handleMarkdown:async function(t){t.log(`r : ${JSON.stringify(t)}`);const r={code:400,message:"Bad Request",timestamp:Date.now()};if(!t.requestText)return r.message="Please Use API V2 !",t.return(400,JSON.stringify(r));const s=JSON.parse(t.requestText);if(!s.device_key)return r.message="device_key is required !",t.return(400,JSON.stringify(r));if(s.markdown){const r=`${((e,t)=>{const r={"y+":e.getFullYear(),"M+":e.getMonth()+1,"d+":e.getDate(),"h+":e.getHours()%12==0?12:e.getHours()%12,"H+":e.getHours(),"m+":e.getMinutes(),"s+":e.getSeconds(),"q+":Math.floor((e.getMonth()+3)/3),"f+":e.getMilliseconds()};for(const e in r){const s=t.match(new RegExp(`${e}`));if(s){const n=s.toString();t=t.replace(n,r[e].toString().padStart(n.length,"0"))}}return t})(new Date,"yyyyMMddHHmmssfff")}${Math.round(1e5*Math.random()).toString().padEnd(5,"0")}`,n=`/usr/share/nginx/html/bark/data/${r}.md`;e.writeFileSync(n,s.markdown),s.url=`https://${t.headersIn.Host}/msg?id=${r}`,delete s.markdown}const n=await t.subrequest("/push",{method:"POST",body:JSON.stringify(s)});t.return(n.status,n.responseText)}};export default t;
